//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EMailAdmin.BackEnd.AssistCardService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AssistCardServiceSoapBinding", Namespace="https://www.assist-card.net/ws/services/AssistCardService")]
    public partial class AssistCardServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback emitirOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarUpgradesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listarUpgrades1OperationCompleted;
        
        private System.Threading.SendOrPostCallback activarVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback activarUpgradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback cotizarUpgradesOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginAgencyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback voidByVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback traerInteresesOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrecomprasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback findVoucherAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsuarioUnicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTarifaPadreOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarVoucherValidadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback asociarUpgradesVoidOperationCompleted;
        
        private System.Threading.SendOrPostCallback findVoucherAllWithTarjetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback cotizarOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherListByIdClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherByIdClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDatosBotonPagoOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrarEndososCapitasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherPasajeroOperationCompleted;
        
        private System.Threading.SendOrPostCallback asociarClienteAvouchersOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrarTarjetaCreditoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ejecutarBatchEmisionesDiariasOperationCompleted;
        
        private System.Threading.SendOrPostCallback activarVoucherBoletoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVouchersClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback consultarVoucherByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback asociarUpgradesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVoucherPaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback procesarReimpresionTacAnualOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AssistCardServiceService() {
            this.Url = global::EMailAdmin.BackEnd.Properties.Settings.Default.EMailAdmin_BackEnd_AssistCardService_AssistCardServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event emitirCompletedEventHandler emitirCompleted;
        
        /// <remarks/>
        public event listarUpgradesCompletedEventHandler listarUpgradesCompleted;
        
        /// <remarks/>
        public event listarUpgrades1CompletedEventHandler listarUpgrades1Completed;
        
        /// <remarks/>
        public event activarVoucherCompletedEventHandler activarVoucherCompleted;
        
        /// <remarks/>
        public event activarUpgradeCompletedEventHandler activarUpgradeCompleted;
        
        /// <remarks/>
        public event cotizarUpgradesCompletedEventHandler cotizarUpgradesCompleted;
        
        /// <remarks/>
        public event loginAgencyUserCompletedEventHandler loginAgencyUserCompleted;
        
        /// <remarks/>
        public event voidByVoucherCompletedEventHandler voidByVoucherCompleted;
        
        /// <remarks/>
        public event traerInteresesCompletedEventHandler traerInteresesCompleted;
        
        /// <remarks/>
        public event consultarVoucherCompletedEventHandler consultarVoucherCompleted;
        
        /// <remarks/>
        public event getPrecomprasCompletedEventHandler getPrecomprasCompleted;
        
        /// <remarks/>
        public event getVoucherInfoCompletedEventHandler getVoucherInfoCompleted;
        
        /// <remarks/>
        public event findVoucherAllCompletedEventHandler findVoucherAllCompleted;
        
        /// <remarks/>
        public event getVoucherAllCompletedEventHandler getVoucherAllCompleted;
        
        /// <remarks/>
        public event getUsuarioUnicoCompletedEventHandler getUsuarioUnicoCompleted;
        
        /// <remarks/>
        public event getTarifaPadreCompletedEventHandler getTarifaPadreCompleted;
        
        /// <remarks/>
        public event consultarVoucherValidadoCompletedEventHandler consultarVoucherValidadoCompleted;
        
        /// <remarks/>
        public event asociarUpgradesVoidCompletedEventHandler asociarUpgradesVoidCompleted;
        
        /// <remarks/>
        public event findVoucherAllWithTarjetaCompletedEventHandler findVoucherAllWithTarjetaCompleted;
        
        /// <remarks/>
        public event cotizarCompletedEventHandler cotizarCompleted;
        
        /// <remarks/>
        public event getVoucherListByIdClienteCompletedEventHandler getVoucherListByIdClienteCompleted;
        
        /// <remarks/>
        public event getVoucherByIdClienteCompletedEventHandler getVoucherByIdClienteCompleted;
        
        /// <remarks/>
        public event getDatosBotonPagoCompletedEventHandler getDatosBotonPagoCompleted;
        
        /// <remarks/>
        public event registrarEndososCapitasCompletedEventHandler registrarEndososCapitasCompleted;
        
        /// <remarks/>
        public event getVoucherPasajeroCompletedEventHandler getVoucherPasajeroCompleted;
        
        /// <remarks/>
        public event asociarClienteAvouchersCompletedEventHandler asociarClienteAvouchersCompleted;
        
        /// <remarks/>
        public event registrarTarjetaCreditoCompletedEventHandler registrarTarjetaCreditoCompleted;
        
        /// <remarks/>
        public event ejecutarBatchEmisionesDiariasCompletedEventHandler ejecutarBatchEmisionesDiariasCompleted;
        
        /// <remarks/>
        public event activarVoucherBoletoCompletedEventHandler activarVoucherBoletoCompleted;
        
        /// <remarks/>
        public event getVouchersClienteCompletedEventHandler getVouchersClienteCompleted;
        
        /// <remarks/>
        public event consultarVoucherByEmailCompletedEventHandler consultarVoucherByEmailCompleted;
        
        /// <remarks/>
        public event asociarUpgradesCompletedEventHandler asociarUpgradesCompleted;
        
        /// <remarks/>
        public event getVoucherPaxCompletedEventHandler getVoucherPaxCompleted;
        
        /// <remarks/>
        public event procesarReimpresionTacAnualCompletedEventHandler procesarReimpresionTacAnualCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.w3.org/2001/XMLSchema", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("emitirReturn")]
        public string emitir(string xml, string user, string password) {
            object[] results = this.Invoke("emitir", new object[] {
                        xml,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void emitirAsync(string xml, string user, string password) {
            this.emitirAsync(xml, user, password, null);
        }
        
        /// <remarks/>
        public void emitirAsync(string xml, string user, string password, object userState) {
            if ((this.emitirOperationCompleted == null)) {
                this.emitirOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemitirOperationCompleted);
            }
            this.InvokeAsync("emitir", new object[] {
                        xml,
                        user,
                        password}, this.emitirOperationCompleted, userState);
        }
        
        private void OnemitirOperationCompleted(object arg) {
            if ((this.emitirCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emitirCompleted(this, new emitirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("listarUpgradesReturn")]
        public string listarUpgrades(int pais, string usuario, string password) {
            object[] results = this.Invoke("listarUpgrades", new object[] {
                        pais,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void listarUpgradesAsync(int pais, string usuario, string password) {
            this.listarUpgradesAsync(pais, usuario, password, null);
        }
        
        /// <remarks/>
        public void listarUpgradesAsync(int pais, string usuario, string password, object userState) {
            if ((this.listarUpgradesOperationCompleted == null)) {
                this.listarUpgradesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarUpgradesOperationCompleted);
            }
            this.InvokeAsync("listarUpgrades", new object[] {
                        pais,
                        usuario,
                        password}, this.listarUpgradesOperationCompleted, userState);
        }
        
        private void OnlistarUpgradesOperationCompleted(object arg) {
            if ((this.listarUpgradesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarUpgradesCompleted(this, new listarUpgradesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="listarUpgrades1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("listarUpgradesReturn")]
        public string listarUpgrades(int pais, string codigoProducto, string usuario, string password) {
            object[] results = this.Invoke("listarUpgrades1", new object[] {
                        pais,
                        codigoProducto,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void listarUpgrades1Async(int pais, string codigoProducto, string usuario, string password) {
            this.listarUpgrades1Async(pais, codigoProducto, usuario, password, null);
        }
        
        /// <remarks/>
        public void listarUpgrades1Async(int pais, string codigoProducto, string usuario, string password, object userState) {
            if ((this.listarUpgrades1OperationCompleted == null)) {
                this.listarUpgrades1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistarUpgrades1OperationCompleted);
            }
            this.InvokeAsync("listarUpgrades1", new object[] {
                        pais,
                        codigoProducto,
                        usuario,
                        password}, this.listarUpgrades1OperationCompleted, userState);
        }
        
        private void OnlistarUpgrades1OperationCompleted(object arg) {
            if ((this.listarUpgrades1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listarUpgrades1Completed(this, new listarUpgrades1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("activarVoucherReturn")]
        public string activarVoucher(string xml, string usuario, string password) {
            object[] results = this.Invoke("activarVoucher", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activarVoucherAsync(string xml, string usuario, string password) {
            this.activarVoucherAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void activarVoucherAsync(string xml, string usuario, string password, object userState) {
            if ((this.activarVoucherOperationCompleted == null)) {
                this.activarVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivarVoucherOperationCompleted);
            }
            this.InvokeAsync("activarVoucher", new object[] {
                        xml,
                        usuario,
                        password}, this.activarVoucherOperationCompleted, userState);
        }
        
        private void OnactivarVoucherOperationCompleted(object arg) {
            if ((this.activarVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activarVoucherCompleted(this, new activarVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("activarUpgradeReturn")]
        public string activarUpgrade(string xml, string usuario, string password) {
            object[] results = this.Invoke("activarUpgrade", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activarUpgradeAsync(string xml, string usuario, string password) {
            this.activarUpgradeAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void activarUpgradeAsync(string xml, string usuario, string password, object userState) {
            if ((this.activarUpgradeOperationCompleted == null)) {
                this.activarUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivarUpgradeOperationCompleted);
            }
            this.InvokeAsync("activarUpgrade", new object[] {
                        xml,
                        usuario,
                        password}, this.activarUpgradeOperationCompleted, userState);
        }
        
        private void OnactivarUpgradeOperationCompleted(object arg) {
            if ((this.activarUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activarUpgradeCompleted(this, new activarUpgradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("cotizarUpgradesReturn")]
        public string cotizarUpgrades(string xml, string usuario, string password) {
            object[] results = this.Invoke("cotizarUpgrades", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cotizarUpgradesAsync(string xml, string usuario, string password) {
            this.cotizarUpgradesAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void cotizarUpgradesAsync(string xml, string usuario, string password, object userState) {
            if ((this.cotizarUpgradesOperationCompleted == null)) {
                this.cotizarUpgradesOperationCompleted = new System.Threading.SendOrPostCallback(this.OncotizarUpgradesOperationCompleted);
            }
            this.InvokeAsync("cotizarUpgrades", new object[] {
                        xml,
                        usuario,
                        password}, this.cotizarUpgradesOperationCompleted, userState);
        }
        
        private void OncotizarUpgradesOperationCompleted(object arg) {
            if ((this.cotizarUpgradesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cotizarUpgradesCompleted(this, new cotizarUpgradesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginAgencyUserReturn")]
        public string loginAgencyUser(int country, string userCode, string password, string serviceUser, string servicePassword) {
            object[] results = this.Invoke("loginAgencyUser", new object[] {
                        country,
                        userCode,
                        password,
                        serviceUser,
                        servicePassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAgencyUserAsync(int country, string userCode, string password, string serviceUser, string servicePassword) {
            this.loginAgencyUserAsync(country, userCode, password, serviceUser, servicePassword, null);
        }
        
        /// <remarks/>
        public void loginAgencyUserAsync(int country, string userCode, string password, string serviceUser, string servicePassword, object userState) {
            if ((this.loginAgencyUserOperationCompleted == null)) {
                this.loginAgencyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginAgencyUserOperationCompleted);
            }
            this.InvokeAsync("loginAgencyUser", new object[] {
                        country,
                        userCode,
                        password,
                        serviceUser,
                        servicePassword}, this.loginAgencyUserOperationCompleted, userState);
        }
        
        private void OnloginAgencyUserOperationCompleted(object arg) {
            if ((this.loginAgencyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginAgencyUserCompleted(this, new loginAgencyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("voidByVoucherReturn")]
        public string voidByVoucher(int countryCode, int voucherCode, string user, string password) {
            object[] results = this.Invoke("voidByVoucher", new object[] {
                        countryCode,
                        voucherCode,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void voidByVoucherAsync(int countryCode, int voucherCode, string user, string password) {
            this.voidByVoucherAsync(countryCode, voucherCode, user, password, null);
        }
        
        /// <remarks/>
        public void voidByVoucherAsync(int countryCode, int voucherCode, string user, string password, object userState) {
            if ((this.voidByVoucherOperationCompleted == null)) {
                this.voidByVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvoidByVoucherOperationCompleted);
            }
            this.InvokeAsync("voidByVoucher", new object[] {
                        countryCode,
                        voucherCode,
                        user,
                        password}, this.voidByVoucherOperationCompleted, userState);
        }
        
        private void OnvoidByVoucherOperationCompleted(object arg) {
            if ((this.voidByVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.voidByVoucherCompleted(this, new voidByVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("traerInteresesReturn")]
        public string traerIntereses(string xml, string usuario, string password) {
            object[] results = this.Invoke("traerIntereses", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void traerInteresesAsync(string xml, string usuario, string password) {
            this.traerInteresesAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void traerInteresesAsync(string xml, string usuario, string password, object userState) {
            if ((this.traerInteresesOperationCompleted == null)) {
                this.traerInteresesOperationCompleted = new System.Threading.SendOrPostCallback(this.OntraerInteresesOperationCompleted);
            }
            this.InvokeAsync("traerIntereses", new object[] {
                        xml,
                        usuario,
                        password}, this.traerInteresesOperationCompleted, userState);
        }
        
        private void OntraerInteresesOperationCompleted(object arg) {
            if ((this.traerInteresesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.traerInteresesCompleted(this, new traerInteresesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("consultarVoucherReturn")]
        public string consultarVoucher(int pais, int codigoVoucher, string usuario, string password) {
            object[] results = this.Invoke("consultarVoucher", new object[] {
                        pais,
                        codigoVoucher,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultarVoucherAsync(int pais, int codigoVoucher, string usuario, string password) {
            this.consultarVoucherAsync(pais, codigoVoucher, usuario, password, null);
        }
        
        /// <remarks/>
        public void consultarVoucherAsync(int pais, int codigoVoucher, string usuario, string password, object userState) {
            if ((this.consultarVoucherOperationCompleted == null)) {
                this.consultarVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarVoucherOperationCompleted);
            }
            this.InvokeAsync("consultarVoucher", new object[] {
                        pais,
                        codigoVoucher,
                        usuario,
                        password}, this.consultarVoucherOperationCompleted, userState);
        }
        
        private void OnconsultarVoucherOperationCompleted(object arg) {
            if ((this.consultarVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarVoucherCompleted(this, new consultarVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPrecomprasReturn")]
        public string getPrecompras(int pais, string agencia, int sucursal, string usuario, string password) {
            object[] results = this.Invoke("getPrecompras", new object[] {
                        pais,
                        agencia,
                        sucursal,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPrecomprasAsync(int pais, string agencia, int sucursal, string usuario, string password) {
            this.getPrecomprasAsync(pais, agencia, sucursal, usuario, password, null);
        }
        
        /// <remarks/>
        public void getPrecomprasAsync(int pais, string agencia, int sucursal, string usuario, string password, object userState) {
            if ((this.getPrecomprasOperationCompleted == null)) {
                this.getPrecomprasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrecomprasOperationCompleted);
            }
            this.InvokeAsync("getPrecompras", new object[] {
                        pais,
                        agencia,
                        sucursal,
                        usuario,
                        password}, this.getPrecomprasOperationCompleted, userState);
        }
        
        private void OngetPrecomprasOperationCompleted(object arg) {
            if ((this.getPrecomprasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrecomprasCompleted(this, new getPrecomprasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVoucherInfoReturn")]
        public string getVoucherInfo(int pais, int codigoVoucher, string modulo, string usuario, string password) {
            object[] results = this.Invoke("getVoucherInfo", new object[] {
                        pais,
                        codigoVoucher,
                        modulo,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherInfoAsync(int pais, int codigoVoucher, string modulo, string usuario, string password) {
            this.getVoucherInfoAsync(pais, codigoVoucher, modulo, usuario, password, null);
        }
        
        /// <remarks/>
        public void getVoucherInfoAsync(int pais, int codigoVoucher, string modulo, string usuario, string password, object userState) {
            if ((this.getVoucherInfoOperationCompleted == null)) {
                this.getVoucherInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherInfoOperationCompleted);
            }
            this.InvokeAsync("getVoucherInfo", new object[] {
                        pais,
                        codigoVoucher,
                        modulo,
                        usuario,
                        password}, this.getVoucherInfoOperationCompleted, userState);
        }
        
        private void OngetVoucherInfoOperationCompleted(object arg) {
            if ((this.getVoucherInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherInfoCompleted(this, new getVoucherInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("findVoucherAllReturn")]
        public string findVoucherAll(int pais, int codigoVoucher, string usuario, string password) {
            object[] results = this.Invoke("findVoucherAll", new object[] {
                        pais,
                        codigoVoucher,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findVoucherAllAsync(int pais, int codigoVoucher, string usuario, string password) {
            this.findVoucherAllAsync(pais, codigoVoucher, usuario, password, null);
        }
        
        /// <remarks/>
        public void findVoucherAllAsync(int pais, int codigoVoucher, string usuario, string password, object userState) {
            if ((this.findVoucherAllOperationCompleted == null)) {
                this.findVoucherAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindVoucherAllOperationCompleted);
            }
            this.InvokeAsync("findVoucherAll", new object[] {
                        pais,
                        codigoVoucher,
                        usuario,
                        password}, this.findVoucherAllOperationCompleted, userState);
        }
        
        private void OnfindVoucherAllOperationCompleted(object arg) {
            if ((this.findVoucherAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findVoucherAllCompleted(this, new findVoucherAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVoucherAllReturn")]
        public string getVoucherAll(int country, string personalId, string user, string password) {
            object[] results = this.Invoke("getVoucherAll", new object[] {
                        country,
                        personalId,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherAllAsync(int country, string personalId, string user, string password) {
            this.getVoucherAllAsync(country, personalId, user, password, null);
        }
        
        /// <remarks/>
        public void getVoucherAllAsync(int country, string personalId, string user, string password, object userState) {
            if ((this.getVoucherAllOperationCompleted == null)) {
                this.getVoucherAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherAllOperationCompleted);
            }
            this.InvokeAsync("getVoucherAll", new object[] {
                        country,
                        personalId,
                        user,
                        password}, this.getVoucherAllOperationCompleted, userState);
        }
        
        private void OngetVoucherAllOperationCompleted(object arg) {
            if ((this.getVoucherAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherAllCompleted(this, new getVoucherAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUsuarioUnicoReturn")]
        public string getUsuarioUnico(string xml, string usuario, string password) {
            object[] results = this.Invoke("getUsuarioUnico", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUsuarioUnicoAsync(string xml, string usuario, string password) {
            this.getUsuarioUnicoAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void getUsuarioUnicoAsync(string xml, string usuario, string password, object userState) {
            if ((this.getUsuarioUnicoOperationCompleted == null)) {
                this.getUsuarioUnicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsuarioUnicoOperationCompleted);
            }
            this.InvokeAsync("getUsuarioUnico", new object[] {
                        xml,
                        usuario,
                        password}, this.getUsuarioUnicoOperationCompleted, userState);
        }
        
        private void OngetUsuarioUnicoOperationCompleted(object arg) {
            if ((this.getUsuarioUnicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsuarioUnicoCompleted(this, new getUsuarioUnicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTarifaPadreReturn")]
        public string getTarifaPadre(int pais, string producto, string codigoTarifa, int cantidadDiasVoucher) {
            object[] results = this.Invoke("getTarifaPadre", new object[] {
                        pais,
                        producto,
                        codigoTarifa,
                        cantidadDiasVoucher});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTarifaPadreAsync(int pais, string producto, string codigoTarifa, int cantidadDiasVoucher) {
            this.getTarifaPadreAsync(pais, producto, codigoTarifa, cantidadDiasVoucher, null);
        }
        
        /// <remarks/>
        public void getTarifaPadreAsync(int pais, string producto, string codigoTarifa, int cantidadDiasVoucher, object userState) {
            if ((this.getTarifaPadreOperationCompleted == null)) {
                this.getTarifaPadreOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTarifaPadreOperationCompleted);
            }
            this.InvokeAsync("getTarifaPadre", new object[] {
                        pais,
                        producto,
                        codigoTarifa,
                        cantidadDiasVoucher}, this.getTarifaPadreOperationCompleted, userState);
        }
        
        private void OngetTarifaPadreOperationCompleted(object arg) {
            if ((this.getTarifaPadreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTarifaPadreCompleted(this, new getTarifaPadreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("consultarVoucherValidadoReturn")]
        public string consultarVoucherValidado(int pais, int codigoVoucher, string tipoDoc, string documento, string usuario, string password) {
            object[] results = this.Invoke("consultarVoucherValidado", new object[] {
                        pais,
                        codigoVoucher,
                        tipoDoc,
                        documento,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultarVoucherValidadoAsync(int pais, int codigoVoucher, string tipoDoc, string documento, string usuario, string password) {
            this.consultarVoucherValidadoAsync(pais, codigoVoucher, tipoDoc, documento, usuario, password, null);
        }
        
        /// <remarks/>
        public void consultarVoucherValidadoAsync(int pais, int codigoVoucher, string tipoDoc, string documento, string usuario, string password, object userState) {
            if ((this.consultarVoucherValidadoOperationCompleted == null)) {
                this.consultarVoucherValidadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarVoucherValidadoOperationCompleted);
            }
            this.InvokeAsync("consultarVoucherValidado", new object[] {
                        pais,
                        codigoVoucher,
                        tipoDoc,
                        documento,
                        usuario,
                        password}, this.consultarVoucherValidadoOperationCompleted, userState);
        }
        
        private void OnconsultarVoucherValidadoOperationCompleted(object arg) {
            if ((this.consultarVoucherValidadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarVoucherValidadoCompleted(this, new consultarVoucherValidadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("asociarUpgradesVoidReturn")]
        public string asociarUpgradesVoid(string xml, string usuario, string password) {
            object[] results = this.Invoke("asociarUpgradesVoid", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void asociarUpgradesVoidAsync(string xml, string usuario, string password) {
            this.asociarUpgradesVoidAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void asociarUpgradesVoidAsync(string xml, string usuario, string password, object userState) {
            if ((this.asociarUpgradesVoidOperationCompleted == null)) {
                this.asociarUpgradesVoidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnasociarUpgradesVoidOperationCompleted);
            }
            this.InvokeAsync("asociarUpgradesVoid", new object[] {
                        xml,
                        usuario,
                        password}, this.asociarUpgradesVoidOperationCompleted, userState);
        }
        
        private void OnasociarUpgradesVoidOperationCompleted(object arg) {
            if ((this.asociarUpgradesVoidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.asociarUpgradesVoidCompleted(this, new asociarUpgradesVoidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("findVoucherAllWithTarjetaReturn")]
        public string findVoucherAllWithTarjeta(int pais, int codigoVoucher, string usuario, string password) {
            object[] results = this.Invoke("findVoucherAllWithTarjeta", new object[] {
                        pais,
                        codigoVoucher,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findVoucherAllWithTarjetaAsync(int pais, int codigoVoucher, string usuario, string password) {
            this.findVoucherAllWithTarjetaAsync(pais, codigoVoucher, usuario, password, null);
        }
        
        /// <remarks/>
        public void findVoucherAllWithTarjetaAsync(int pais, int codigoVoucher, string usuario, string password, object userState) {
            if ((this.findVoucherAllWithTarjetaOperationCompleted == null)) {
                this.findVoucherAllWithTarjetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindVoucherAllWithTarjetaOperationCompleted);
            }
            this.InvokeAsync("findVoucherAllWithTarjeta", new object[] {
                        pais,
                        codigoVoucher,
                        usuario,
                        password}, this.findVoucherAllWithTarjetaOperationCompleted, userState);
        }
        
        private void OnfindVoucherAllWithTarjetaOperationCompleted(object arg) {
            if ((this.findVoucherAllWithTarjetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findVoucherAllWithTarjetaCompleted(this, new findVoucherAllWithTarjetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("cotizarReturn")]
        public string cotizar(string xml, string usuario, string password) {
            object[] results = this.Invoke("cotizar", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cotizarAsync(string xml, string usuario, string password) {
            this.cotizarAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void cotizarAsync(string xml, string usuario, string password, object userState) {
            if ((this.cotizarOperationCompleted == null)) {
                this.cotizarOperationCompleted = new System.Threading.SendOrPostCallback(this.OncotizarOperationCompleted);
            }
            this.InvokeAsync("cotizar", new object[] {
                        xml,
                        usuario,
                        password}, this.cotizarOperationCompleted, userState);
        }
        
        private void OncotizarOperationCompleted(object arg) {
            if ((this.cotizarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cotizarCompleted(this, new cotizarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVoucherListByIdClienteReturn")]
        public string getVoucherListByIdCliente(int idClienteUnico, string usuario, string password) {
            object[] results = this.Invoke("getVoucherListByIdCliente", new object[] {
                        idClienteUnico,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherListByIdClienteAsync(int idClienteUnico, string usuario, string password) {
            this.getVoucherListByIdClienteAsync(idClienteUnico, usuario, password, null);
        }
        
        /// <remarks/>
        public void getVoucherListByIdClienteAsync(int idClienteUnico, string usuario, string password, object userState) {
            if ((this.getVoucherListByIdClienteOperationCompleted == null)) {
                this.getVoucherListByIdClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherListByIdClienteOperationCompleted);
            }
            this.InvokeAsync("getVoucherListByIdCliente", new object[] {
                        idClienteUnico,
                        usuario,
                        password}, this.getVoucherListByIdClienteOperationCompleted, userState);
        }
        
        private void OngetVoucherListByIdClienteOperationCompleted(object arg) {
            if ((this.getVoucherListByIdClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherListByIdClienteCompleted(this, new getVoucherListByIdClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVoucherByIdClienteReturn")]
        public string getVoucherByIdCliente(int idClienteUnico, int pais, string nroDocumento, string usuario, string password) {
            object[] results = this.Invoke("getVoucherByIdCliente", new object[] {
                        idClienteUnico,
                        pais,
                        nroDocumento,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherByIdClienteAsync(int idClienteUnico, int pais, string nroDocumento, string usuario, string password) {
            this.getVoucherByIdClienteAsync(idClienteUnico, pais, nroDocumento, usuario, password, null);
        }
        
        /// <remarks/>
        public void getVoucherByIdClienteAsync(int idClienteUnico, int pais, string nroDocumento, string usuario, string password, object userState) {
            if ((this.getVoucherByIdClienteOperationCompleted == null)) {
                this.getVoucherByIdClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherByIdClienteOperationCompleted);
            }
            this.InvokeAsync("getVoucherByIdCliente", new object[] {
                        idClienteUnico,
                        pais,
                        nroDocumento,
                        usuario,
                        password}, this.getVoucherByIdClienteOperationCompleted, userState);
        }
        
        private void OngetVoucherByIdClienteOperationCompleted(object arg) {
            if ((this.getVoucherByIdClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherByIdClienteCompleted(this, new getVoucherByIdClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getDatosBotonPagoReturn")]
        public string getDatosBotonPago(int pais, int grupoVoucher, string idioma, string usuario, string password) {
            object[] results = this.Invoke("getDatosBotonPago", new object[] {
                        pais,
                        grupoVoucher,
                        idioma,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDatosBotonPagoAsync(int pais, int grupoVoucher, string idioma, string usuario, string password) {
            this.getDatosBotonPagoAsync(pais, grupoVoucher, idioma, usuario, password, null);
        }
        
        /// <remarks/>
        public void getDatosBotonPagoAsync(int pais, int grupoVoucher, string idioma, string usuario, string password, object userState) {
            if ((this.getDatosBotonPagoOperationCompleted == null)) {
                this.getDatosBotonPagoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDatosBotonPagoOperationCompleted);
            }
            this.InvokeAsync("getDatosBotonPago", new object[] {
                        pais,
                        grupoVoucher,
                        idioma,
                        usuario,
                        password}, this.getDatosBotonPagoOperationCompleted, userState);
        }
        
        private void OngetDatosBotonPagoOperationCompleted(object arg) {
            if ((this.getDatosBotonPagoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDatosBotonPagoCompleted(this, new getDatosBotonPagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("registrarEndososCapitasReturn")]
        public string registrarEndososCapitas(string codigoPoliza, string fecha, double precioTotal, int cantidadCapitados, string usuario, string password) {
            object[] results = this.Invoke("registrarEndososCapitas", new object[] {
                        codigoPoliza,
                        fecha,
                        precioTotal,
                        cantidadCapitados,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registrarEndososCapitasAsync(string codigoPoliza, string fecha, double precioTotal, int cantidadCapitados, string usuario, string password) {
            this.registrarEndososCapitasAsync(codigoPoliza, fecha, precioTotal, cantidadCapitados, usuario, password, null);
        }
        
        /// <remarks/>
        public void registrarEndososCapitasAsync(string codigoPoliza, string fecha, double precioTotal, int cantidadCapitados, string usuario, string password, object userState) {
            if ((this.registrarEndososCapitasOperationCompleted == null)) {
                this.registrarEndososCapitasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrarEndososCapitasOperationCompleted);
            }
            this.InvokeAsync("registrarEndososCapitas", new object[] {
                        codigoPoliza,
                        fecha,
                        precioTotal,
                        cantidadCapitados,
                        usuario,
                        password}, this.registrarEndososCapitasOperationCompleted, userState);
        }
        
        private void OnregistrarEndososCapitasOperationCompleted(object arg) {
            if ((this.registrarEndososCapitasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrarEndososCapitasCompleted(this, new registrarEndososCapitasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVoucherPasajeroReturn")]
        public string getVoucherPasajero(int country, string personalId, bool incluyeMembership, string user, string password) {
            object[] results = this.Invoke("getVoucherPasajero", new object[] {
                        country,
                        personalId,
                        incluyeMembership,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherPasajeroAsync(int country, string personalId, bool incluyeMembership, string user, string password) {
            this.getVoucherPasajeroAsync(country, personalId, incluyeMembership, user, password, null);
        }
        
        /// <remarks/>
        public void getVoucherPasajeroAsync(int country, string personalId, bool incluyeMembership, string user, string password, object userState) {
            if ((this.getVoucherPasajeroOperationCompleted == null)) {
                this.getVoucherPasajeroOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherPasajeroOperationCompleted);
            }
            this.InvokeAsync("getVoucherPasajero", new object[] {
                        country,
                        personalId,
                        incluyeMembership,
                        user,
                        password}, this.getVoucherPasajeroOperationCompleted, userState);
        }
        
        private void OngetVoucherPasajeroOperationCompleted(object arg) {
            if ((this.getVoucherPasajeroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherPasajeroCompleted(this, new getVoucherPasajeroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("asociarClienteAvouchersReturn")]
        public string asociarClienteAvouchers(string xml, int idClienteUnico, string usuario, string password) {
            object[] results = this.Invoke("asociarClienteAvouchers", new object[] {
                        xml,
                        idClienteUnico,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void asociarClienteAvouchersAsync(string xml, int idClienteUnico, string usuario, string password) {
            this.asociarClienteAvouchersAsync(xml, idClienteUnico, usuario, password, null);
        }
        
        /// <remarks/>
        public void asociarClienteAvouchersAsync(string xml, int idClienteUnico, string usuario, string password, object userState) {
            if ((this.asociarClienteAvouchersOperationCompleted == null)) {
                this.asociarClienteAvouchersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnasociarClienteAvouchersOperationCompleted);
            }
            this.InvokeAsync("asociarClienteAvouchers", new object[] {
                        xml,
                        idClienteUnico,
                        usuario,
                        password}, this.asociarClienteAvouchersOperationCompleted, userState);
        }
        
        private void OnasociarClienteAvouchersOperationCompleted(object arg) {
            if ((this.asociarClienteAvouchersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.asociarClienteAvouchersCompleted(this, new asociarClienteAvouchersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("registrarTarjetaCreditoReturn")]
        public string registrarTarjetaCredito(string xml, string serviceUser, string servicePassword) {
            object[] results = this.Invoke("registrarTarjetaCredito", new object[] {
                        xml,
                        serviceUser,
                        servicePassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registrarTarjetaCreditoAsync(string xml, string serviceUser, string servicePassword) {
            this.registrarTarjetaCreditoAsync(xml, serviceUser, servicePassword, null);
        }
        
        /// <remarks/>
        public void registrarTarjetaCreditoAsync(string xml, string serviceUser, string servicePassword, object userState) {
            if ((this.registrarTarjetaCreditoOperationCompleted == null)) {
                this.registrarTarjetaCreditoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrarTarjetaCreditoOperationCompleted);
            }
            this.InvokeAsync("registrarTarjetaCredito", new object[] {
                        xml,
                        serviceUser,
                        servicePassword}, this.registrarTarjetaCreditoOperationCompleted, userState);
        }
        
        private void OnregistrarTarjetaCreditoOperationCompleted(object arg) {
            if ((this.registrarTarjetaCreditoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrarTarjetaCreditoCompleted(this, new registrarTarjetaCreditoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        public void ejecutarBatchEmisionesDiarias() {
            this.Invoke("ejecutarBatchEmisionesDiarias", new object[0]);
        }
        
        /// <remarks/>
        public void ejecutarBatchEmisionesDiariasAsync() {
            this.ejecutarBatchEmisionesDiariasAsync(null);
        }
        
        /// <remarks/>
        public void ejecutarBatchEmisionesDiariasAsync(object userState) {
            if ((this.ejecutarBatchEmisionesDiariasOperationCompleted == null)) {
                this.ejecutarBatchEmisionesDiariasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnejecutarBatchEmisionesDiariasOperationCompleted);
            }
            this.InvokeAsync("ejecutarBatchEmisionesDiarias", new object[0], this.ejecutarBatchEmisionesDiariasOperationCompleted, userState);
        }
        
        private void OnejecutarBatchEmisionesDiariasOperationCompleted(object arg) {
            if ((this.ejecutarBatchEmisionesDiariasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ejecutarBatchEmisionesDiariasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("activarVoucherBoletoReturn")]
        public string activarVoucherBoleto(string xml, string usuario, string password) {
            object[] results = this.Invoke("activarVoucherBoleto", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activarVoucherBoletoAsync(string xml, string usuario, string password) {
            this.activarVoucherBoletoAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void activarVoucherBoletoAsync(string xml, string usuario, string password, object userState) {
            if ((this.activarVoucherBoletoOperationCompleted == null)) {
                this.activarVoucherBoletoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivarVoucherBoletoOperationCompleted);
            }
            this.InvokeAsync("activarVoucherBoleto", new object[] {
                        xml,
                        usuario,
                        password}, this.activarVoucherBoletoOperationCompleted, userState);
        }
        
        private void OnactivarVoucherBoletoOperationCompleted(object arg) {
            if ((this.activarVoucherBoletoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activarVoucherBoletoCompleted(this, new activarVoucherBoletoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVouchersClienteReturn")]
        public string getVouchersCliente(int idCuenta, string codigoUsuario, string passwordUsuario) {
            object[] results = this.Invoke("getVouchersCliente", new object[] {
                        idCuenta,
                        codigoUsuario,
                        passwordUsuario});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVouchersClienteAsync(int idCuenta, string codigoUsuario, string passwordUsuario) {
            this.getVouchersClienteAsync(idCuenta, codigoUsuario, passwordUsuario, null);
        }
        
        /// <remarks/>
        public void getVouchersClienteAsync(int idCuenta, string codigoUsuario, string passwordUsuario, object userState) {
            if ((this.getVouchersClienteOperationCompleted == null)) {
                this.getVouchersClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVouchersClienteOperationCompleted);
            }
            this.InvokeAsync("getVouchersCliente", new object[] {
                        idCuenta,
                        codigoUsuario,
                        passwordUsuario}, this.getVouchersClienteOperationCompleted, userState);
        }
        
        private void OngetVouchersClienteOperationCompleted(object arg) {
            if ((this.getVouchersClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVouchersClienteCompleted(this, new getVouchersClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("consultarVoucherByEmailReturn")]
        public string consultarVoucherByEmail(string mail, string usuario, string password) {
            object[] results = this.Invoke("consultarVoucherByEmail", new object[] {
                        mail,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void consultarVoucherByEmailAsync(string mail, string usuario, string password) {
            this.consultarVoucherByEmailAsync(mail, usuario, password, null);
        }
        
        /// <remarks/>
        public void consultarVoucherByEmailAsync(string mail, string usuario, string password, object userState) {
            if ((this.consultarVoucherByEmailOperationCompleted == null)) {
                this.consultarVoucherByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarVoucherByEmailOperationCompleted);
            }
            this.InvokeAsync("consultarVoucherByEmail", new object[] {
                        mail,
                        usuario,
                        password}, this.consultarVoucherByEmailOperationCompleted, userState);
        }
        
        private void OnconsultarVoucherByEmailOperationCompleted(object arg) {
            if ((this.consultarVoucherByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.consultarVoucherByEmailCompleted(this, new consultarVoucherByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("asociarUpgradesReturn")]
        public string asociarUpgrades(string xml, string usuario, string password) {
            object[] results = this.Invoke("asociarUpgrades", new object[] {
                        xml,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void asociarUpgradesAsync(string xml, string usuario, string password) {
            this.asociarUpgradesAsync(xml, usuario, password, null);
        }
        
        /// <remarks/>
        public void asociarUpgradesAsync(string xml, string usuario, string password, object userState) {
            if ((this.asociarUpgradesOperationCompleted == null)) {
                this.asociarUpgradesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnasociarUpgradesOperationCompleted);
            }
            this.InvokeAsync("asociarUpgrades", new object[] {
                        xml,
                        usuario,
                        password}, this.asociarUpgradesOperationCompleted, userState);
        }
        
        private void OnasociarUpgradesOperationCompleted(object arg) {
            if ((this.asociarUpgradesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.asociarUpgradesCompleted(this, new asociarUpgradesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("getVoucherPaxReturn")]
        public string getVoucherPax(int country, string personalId, string user, string password) {
            object[] results = this.Invoke("getVoucherPax", new object[] {
                        country,
                        personalId,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVoucherPaxAsync(int country, string personalId, string user, string password) {
            this.getVoucherPaxAsync(country, personalId, user, password, null);
        }
        
        /// <remarks/>
        public void getVoucherPaxAsync(int country, string personalId, string user, string password, object userState) {
            if ((this.getVoucherPaxOperationCompleted == null)) {
                this.getVoucherPaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVoucherPaxOperationCompleted);
            }
            this.InvokeAsync("getVoucherPax", new object[] {
                        country,
                        personalId,
                        user,
                        password}, this.getVoucherPaxOperationCompleted, userState);
        }
        
        private void OngetVoucherPaxOperationCompleted(object arg) {
            if ((this.getVoucherPaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVoucherPaxCompleted(this, new getVoucherPaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://services.ws.icard.com", ResponseNamespace="https://www.assist-card.net/ws/services/AssistCardService")]
        [return: System.Xml.Serialization.SoapElementAttribute("procesarReimpresionTacAnualReturn")]
        public string procesarReimpresionTacAnual(int pais, int voucher, string usuario, string password) {
            object[] results = this.Invoke("procesarReimpresionTacAnual", new object[] {
                        pais,
                        voucher,
                        usuario,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void procesarReimpresionTacAnualAsync(int pais, int voucher, string usuario, string password) {
            this.procesarReimpresionTacAnualAsync(pais, voucher, usuario, password, null);
        }
        
        /// <remarks/>
        public void procesarReimpresionTacAnualAsync(int pais, int voucher, string usuario, string password, object userState) {
            if ((this.procesarReimpresionTacAnualOperationCompleted == null)) {
                this.procesarReimpresionTacAnualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocesarReimpresionTacAnualOperationCompleted);
            }
            this.InvokeAsync("procesarReimpresionTacAnual", new object[] {
                        pais,
                        voucher,
                        usuario,
                        password}, this.procesarReimpresionTacAnualOperationCompleted, userState);
        }
        
        private void OnprocesarReimpresionTacAnualOperationCompleted(object arg) {
            if ((this.procesarReimpresionTacAnualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.procesarReimpresionTacAnualCompleted(this, new procesarReimpresionTacAnualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void emitirCompletedEventHandler(object sender, emitirCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emitirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emitirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void listarUpgradesCompletedEventHandler(object sender, listarUpgradesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarUpgradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarUpgradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void listarUpgrades1CompletedEventHandler(object sender, listarUpgrades1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listarUpgrades1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listarUpgrades1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void activarVoucherCompletedEventHandler(object sender, activarVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activarVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activarVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void activarUpgradeCompletedEventHandler(object sender, activarUpgradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activarUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activarUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void cotizarUpgradesCompletedEventHandler(object sender, cotizarUpgradesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cotizarUpgradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cotizarUpgradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void loginAgencyUserCompletedEventHandler(object sender, loginAgencyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginAgencyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginAgencyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void voidByVoucherCompletedEventHandler(object sender, voidByVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class voidByVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal voidByVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void traerInteresesCompletedEventHandler(object sender, traerInteresesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class traerInteresesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal traerInteresesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void consultarVoucherCompletedEventHandler(object sender, consultarVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getPrecomprasCompletedEventHandler(object sender, getPrecomprasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPrecomprasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrecomprasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVoucherInfoCompletedEventHandler(object sender, getVoucherInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void findVoucherAllCompletedEventHandler(object sender, findVoucherAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findVoucherAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findVoucherAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVoucherAllCompletedEventHandler(object sender, getVoucherAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getUsuarioUnicoCompletedEventHandler(object sender, getUsuarioUnicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsuarioUnicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsuarioUnicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getTarifaPadreCompletedEventHandler(object sender, getTarifaPadreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTarifaPadreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTarifaPadreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void consultarVoucherValidadoCompletedEventHandler(object sender, consultarVoucherValidadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarVoucherValidadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarVoucherValidadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void asociarUpgradesVoidCompletedEventHandler(object sender, asociarUpgradesVoidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class asociarUpgradesVoidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal asociarUpgradesVoidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void findVoucherAllWithTarjetaCompletedEventHandler(object sender, findVoucherAllWithTarjetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findVoucherAllWithTarjetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findVoucherAllWithTarjetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void cotizarCompletedEventHandler(object sender, cotizarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cotizarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cotizarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVoucherListByIdClienteCompletedEventHandler(object sender, getVoucherListByIdClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherListByIdClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherListByIdClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVoucherByIdClienteCompletedEventHandler(object sender, getVoucherByIdClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherByIdClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherByIdClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getDatosBotonPagoCompletedEventHandler(object sender, getDatosBotonPagoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDatosBotonPagoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDatosBotonPagoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void registrarEndososCapitasCompletedEventHandler(object sender, registrarEndososCapitasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registrarEndososCapitasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registrarEndososCapitasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVoucherPasajeroCompletedEventHandler(object sender, getVoucherPasajeroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherPasajeroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherPasajeroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void asociarClienteAvouchersCompletedEventHandler(object sender, asociarClienteAvouchersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class asociarClienteAvouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal asociarClienteAvouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void registrarTarjetaCreditoCompletedEventHandler(object sender, registrarTarjetaCreditoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registrarTarjetaCreditoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registrarTarjetaCreditoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ejecutarBatchEmisionesDiariasCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void activarVoucherBoletoCompletedEventHandler(object sender, activarVoucherBoletoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activarVoucherBoletoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activarVoucherBoletoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVouchersClienteCompletedEventHandler(object sender, getVouchersClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVouchersClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVouchersClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void consultarVoucherByEmailCompletedEventHandler(object sender, consultarVoucherByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class consultarVoucherByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal consultarVoucherByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void asociarUpgradesCompletedEventHandler(object sender, asociarUpgradesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class asociarUpgradesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal asociarUpgradesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getVoucherPaxCompletedEventHandler(object sender, getVoucherPaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVoucherPaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVoucherPaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void procesarReimpresionTacAnualCompletedEventHandler(object sender, procesarReimpresionTacAnualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class procesarReimpresionTacAnualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal procesarReimpresionTacAnualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591