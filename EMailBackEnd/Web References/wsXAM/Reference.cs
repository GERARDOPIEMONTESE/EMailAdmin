//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EMailAdmin.BackEnd.wsXAM {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IMailService", Namespace="http://tempuri.org/")]
    public partial class MailService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCasesForSendingMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCasesMoreThanThreeDaysOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MailService() {
            this.Url = global::EMailAdmin.BackEnd.Properties.Settings.Default.EMailAdmin_BackEnd_wsXAM_MailService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCasesForSendingMailCompletedEventHandler GetCasesForSendingMailCompleted;
        
        /// <remarks/>
        public event GetCasesMoreThanThreeDaysCompletedEventHandler GetCasesMoreThanThreeDaysCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IMailService/GetCasesForSendingMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/eAA.WS.Mail")]
        public ServiceCase[] GetCasesForSendingMail() {
            object[] results = this.Invoke("GetCasesForSendingMail", new object[0]);
            return ((ServiceCase[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCasesForSendingMailAsync() {
            this.GetCasesForSendingMailAsync(null);
        }
        
        /// <remarks/>
        public void GetCasesForSendingMailAsync(object userState) {
            if ((this.GetCasesForSendingMailOperationCompleted == null)) {
                this.GetCasesForSendingMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCasesForSendingMailOperationCompleted);
            }
            this.InvokeAsync("GetCasesForSendingMail", new object[0], this.GetCasesForSendingMailOperationCompleted, userState);
        }
        
        private void OnGetCasesForSendingMailOperationCompleted(object arg) {
            if ((this.GetCasesForSendingMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCasesForSendingMailCompleted(this, new GetCasesForSendingMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IMailService/GetCasesMoreThanThreeDays", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/eAA.WS.Mail")]
        public ServiceCase[] GetCasesMoreThanThreeDays() {
            object[] results = this.Invoke("GetCasesMoreThanThreeDays", new object[0]);
            return ((ServiceCase[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCasesMoreThanThreeDaysAsync() {
            this.GetCasesMoreThanThreeDaysAsync(null);
        }
        
        /// <remarks/>
        public void GetCasesMoreThanThreeDaysAsync(object userState) {
            if ((this.GetCasesMoreThanThreeDaysOperationCompleted == null)) {
                this.GetCasesMoreThanThreeDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCasesMoreThanThreeDaysOperationCompleted);
            }
            this.InvokeAsync("GetCasesMoreThanThreeDays", new object[0], this.GetCasesMoreThanThreeDaysOperationCompleted, userState);
        }
        
        private void OnGetCasesMoreThanThreeDaysOperationCompleted(object arg) {
            if ((this.GetCasesMoreThanThreeDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCasesMoreThanThreeDaysCompleted(this, new GetCasesMoreThanThreeDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/eAA.WS.Mail")]
    public partial class ServiceCase {
        
        private string assistanceCountryField;
        
        private string caseIdField;
        
        private string coordinatorField;
        
        private string countryField;
        
        private string delayField;
        
        private string regionField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssistanceCountry {
            get {
                return this.assistanceCountryField;
            }
            set {
                this.assistanceCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CaseId {
            get {
                return this.caseIdField;
            }
            set {
                this.caseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Coordinator {
            get {
                return this.coordinatorField;
            }
            set {
                this.coordinatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCasesForSendingMailCompletedEventHandler(object sender, GetCasesForSendingMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCasesForSendingMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCasesForSendingMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCase[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetCasesMoreThanThreeDaysCompletedEventHandler(object sender, GetCasesMoreThanThreeDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCasesMoreThanThreeDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCasesMoreThanThreeDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceCase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceCase[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591