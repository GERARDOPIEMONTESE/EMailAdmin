//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EMailAdmin.EmailSender {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EMailSenderServiceSoap", Namespace="http://tempuri.org/")]
    public partial class EMailSenderService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMailEkitOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMultipleMailEkitOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitEMailProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailCancelacionPolizaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailModificacionPolizaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailCotizacionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EMailSenderService() {
            this.Url = global::EMailAdmin.Properties.Settings.Default.EMailAdmin_EMailSender_EMailSenderService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMailEkitCompletedEventHandler SendMailEkitCompleted;
        
        /// <remarks/>
        public event SendMultipleMailEkitCompletedEventHandler SendMultipleMailEkitCompleted;
        
        /// <remarks/>
        public event InitEMailProcessCompletedEventHandler InitEMailProcessCompleted;
        
        /// <remarks/>
        public event SendMailCancelacionPolizaCompletedEventHandler SendMailCancelacionPolizaCompleted;
        
        /// <remarks/>
        public event SendMailModificacionPolizaCompletedEventHandler SendMailModificacionPolizaCompleted;
        
        /// <remarks/>
        public event SendMailCotizacionCompletedEventHandler SendMailCotizacionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailEkit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailEkit(int countryCode, string voucherCode, string moduleCode, string user, string password) {
            object[] results = this.Invoke("SendMailEkit", new object[] {
                        countryCode,
                        voucherCode,
                        moduleCode,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailEkitAsync(int countryCode, string voucherCode, string moduleCode, string user, string password) {
            this.SendMailEkitAsync(countryCode, voucherCode, moduleCode, user, password, null);
        }
        
        /// <remarks/>
        public void SendMailEkitAsync(int countryCode, string voucherCode, string moduleCode, string user, string password, object userState) {
            if ((this.SendMailEkitOperationCompleted == null)) {
                this.SendMailEkitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailEkitOperationCompleted);
            }
            this.InvokeAsync("SendMailEkit", new object[] {
                        countryCode,
                        voucherCode,
                        moduleCode,
                        user,
                        password}, this.SendMailEkitOperationCompleted, userState);
        }
        
        private void OnSendMailEkitOperationCompleted(object arg) {
            if ((this.SendMailEkitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailEkitCompleted(this, new SendMailEkitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMultipleMailEkit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMultipleMailEkit(int countryCode, string voucherCodes, string moduleCode, string user, string password) {
            object[] results = this.Invoke("SendMultipleMailEkit", new object[] {
                        countryCode,
                        voucherCodes,
                        moduleCode,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMultipleMailEkitAsync(int countryCode, string voucherCodes, string moduleCode, string user, string password) {
            this.SendMultipleMailEkitAsync(countryCode, voucherCodes, moduleCode, user, password, null);
        }
        
        /// <remarks/>
        public void SendMultipleMailEkitAsync(int countryCode, string voucherCodes, string moduleCode, string user, string password, object userState) {
            if ((this.SendMultipleMailEkitOperationCompleted == null)) {
                this.SendMultipleMailEkitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMultipleMailEkitOperationCompleted);
            }
            this.InvokeAsync("SendMultipleMailEkit", new object[] {
                        countryCode,
                        voucherCodes,
                        moduleCode,
                        user,
                        password}, this.SendMultipleMailEkitOperationCompleted, userState);
        }
        
        private void OnSendMultipleMailEkitOperationCompleted(object arg) {
            if ((this.SendMultipleMailEkitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMultipleMailEkitCompleted(this, new SendMultipleMailEkitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitEMailProcess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InitEMailProcess(string user, string password) {
            this.Invoke("InitEMailProcess", new object[] {
                        user,
                        password});
        }
        
        /// <remarks/>
        public void InitEMailProcessAsync(string user, string password) {
            this.InitEMailProcessAsync(user, password, null);
        }
        
        /// <remarks/>
        public void InitEMailProcessAsync(string user, string password, object userState) {
            if ((this.InitEMailProcessOperationCompleted == null)) {
                this.InitEMailProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitEMailProcessOperationCompleted);
            }
            this.InvokeAsync("InitEMailProcess", new object[] {
                        user,
                        password}, this.InitEMailProcessOperationCompleted, userState);
        }
        
        private void OnInitEMailProcessOperationCompleted(object arg) {
            if ((this.InitEMailProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitEMailProcessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailCancelacionPoliza", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailCancelacionPoliza(int countryCode, string voucherCode, string polizaId, string moduleCode, string user, string password) {
            object[] results = this.Invoke("SendMailCancelacionPoliza", new object[] {
                        countryCode,
                        voucherCode,
                        polizaId,
                        moduleCode,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailCancelacionPolizaAsync(int countryCode, string voucherCode, string polizaId, string moduleCode, string user, string password) {
            this.SendMailCancelacionPolizaAsync(countryCode, voucherCode, polizaId, moduleCode, user, password, null);
        }
        
        /// <remarks/>
        public void SendMailCancelacionPolizaAsync(int countryCode, string voucherCode, string polizaId, string moduleCode, string user, string password, object userState) {
            if ((this.SendMailCancelacionPolizaOperationCompleted == null)) {
                this.SendMailCancelacionPolizaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailCancelacionPolizaOperationCompleted);
            }
            this.InvokeAsync("SendMailCancelacionPoliza", new object[] {
                        countryCode,
                        voucherCode,
                        polizaId,
                        moduleCode,
                        user,
                        password}, this.SendMailCancelacionPolizaOperationCompleted, userState);
        }
        
        private void OnSendMailCancelacionPolizaOperationCompleted(object arg) {
            if ((this.SendMailCancelacionPolizaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCancelacionPolizaCompleted(this, new SendMailCancelacionPolizaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailModificacionPoliza", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailModificacionPoliza(int countryCode, string voucherCode, string polizaId, string polizaVoidId, string moduleCode, string user, string password) {
            object[] results = this.Invoke("SendMailModificacionPoliza", new object[] {
                        countryCode,
                        voucherCode,
                        polizaId,
                        polizaVoidId,
                        moduleCode,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailModificacionPolizaAsync(int countryCode, string voucherCode, string polizaId, string polizaVoidId, string moduleCode, string user, string password) {
            this.SendMailModificacionPolizaAsync(countryCode, voucherCode, polizaId, polizaVoidId, moduleCode, user, password, null);
        }
        
        /// <remarks/>
        public void SendMailModificacionPolizaAsync(int countryCode, string voucherCode, string polizaId, string polizaVoidId, string moduleCode, string user, string password, object userState) {
            if ((this.SendMailModificacionPolizaOperationCompleted == null)) {
                this.SendMailModificacionPolizaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailModificacionPolizaOperationCompleted);
            }
            this.InvokeAsync("SendMailModificacionPoliza", new object[] {
                        countryCode,
                        voucherCode,
                        polizaId,
                        polizaVoidId,
                        moduleCode,
                        user,
                        password}, this.SendMailModificacionPolizaOperationCompleted, userState);
        }
        
        private void OnSendMailModificacionPolizaOperationCompleted(object arg) {
            if ((this.SendMailModificacionPolizaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailModificacionPolizaCompleted(this, new SendMailModificacionPolizaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailCotizacion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailCotizacion(MailCotizacion cotizacion, string user, string password) {
            object[] results = this.Invoke("SendMailCotizacion", new object[] {
                        cotizacion,
                        user,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailCotizacionAsync(MailCotizacion cotizacion, string user, string password) {
            this.SendMailCotizacionAsync(cotizacion, user, password, null);
        }
        
        /// <remarks/>
        public void SendMailCotizacionAsync(MailCotizacion cotizacion, string user, string password, object userState) {
            if ((this.SendMailCotizacionOperationCompleted == null)) {
                this.SendMailCotizacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailCotizacionOperationCompleted);
            }
            this.InvokeAsync("SendMailCotizacion", new object[] {
                        cotizacion,
                        user,
                        password}, this.SendMailCotizacionOperationCompleted, userState);
        }
        
        private void OnSendMailCotizacionOperationCompleted(object arg) {
            if ((this.SendMailCotizacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCotizacionCompleted(this, new SendMailCotizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MailCotizacion {
        
        private Producto[] productosField;
        
        private string moduleField;
        
        private int idiomaField;
        
        private string startDateField;
        
        private string endDateField;
        
        private int countryField;
        
        private bool applyPolicyField;
        
        private string dollarQuoteField;
        
        /// <remarks/>
        public Producto[] Productos {
            get {
                return this.productosField;
            }
            set {
                this.productosField = value;
            }
        }
        
        /// <remarks/>
        public string module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
            }
        }
        
        /// <remarks/>
        public int idioma {
            get {
                return this.idiomaField;
            }
            set {
                this.idiomaField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public bool ApplyPolicy {
            get {
                return this.applyPolicyField;
            }
            set {
                this.applyPolicyField = value;
            }
        }
        
        /// <remarks/>
        public string DollarQuote {
            get {
                return this.dollarQuoteField;
            }
            set {
                this.dollarQuoteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Producto {
        
        private string productNameField;
        
        private Clausula[] clausesField;
        
        private string totalField;
        
        private string insuranceField;
        
        private string assistanceField;
        
        private string startDateField;
        
        private string endDateField;
        
        private int countryField;
        
        private string toField;
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public Clausula[] Clauses {
            get {
                return this.clausesField;
            }
            set {
                this.clausesField = value;
            }
        }
        
        /// <remarks/>
        public string Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string Insurance {
            get {
                return this.insuranceField;
            }
            set {
                this.insuranceField = value;
            }
        }
        
        /// <remarks/>
        public string Assistance {
            get {
                return this.assistanceField;
            }
            set {
                this.assistanceField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Clausula {
        
        private int paisField;
        
        private string productoField;
        
        private string tarifaField;
        
        private string cantDiasField;
        
        private string idClausulaField;
        
        private string leyendaField;
        
        private int posicionField;
        
        private string tituloField;
        
        /// <remarks/>
        public int pais {
            get {
                return this.paisField;
            }
            set {
                this.paisField = value;
            }
        }
        
        /// <remarks/>
        public string producto {
            get {
                return this.productoField;
            }
            set {
                this.productoField = value;
            }
        }
        
        /// <remarks/>
        public string tarifa {
            get {
                return this.tarifaField;
            }
            set {
                this.tarifaField = value;
            }
        }
        
        /// <remarks/>
        public string cantDias {
            get {
                return this.cantDiasField;
            }
            set {
                this.cantDiasField = value;
            }
        }
        
        /// <remarks/>
        public string idClausula {
            get {
                return this.idClausulaField;
            }
            set {
                this.idClausulaField = value;
            }
        }
        
        /// <remarks/>
        public string leyenda {
            get {
                return this.leyendaField;
            }
            set {
                this.leyendaField = value;
            }
        }
        
        /// <remarks/>
        public int posicion {
            get {
                return this.posicionField;
            }
            set {
                this.posicionField = value;
            }
        }
        
        /// <remarks/>
        public string titulo {
            get {
                return this.tituloField;
            }
            set {
                this.tituloField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailEkitCompletedEventHandler(object sender, SendMailEkitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailEkitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailEkitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMultipleMailEkitCompletedEventHandler(object sender, SendMultipleMailEkitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMultipleMailEkitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMultipleMailEkitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InitEMailProcessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailCancelacionPolizaCompletedEventHandler(object sender, SendMailCancelacionPolizaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCancelacionPolizaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCancelacionPolizaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailModificacionPolizaCompletedEventHandler(object sender, SendMailModificacionPolizaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailModificacionPolizaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailModificacionPolizaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailCotizacionCompletedEventHandler(object sender, SendMailCotizacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCotizacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCotizacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591